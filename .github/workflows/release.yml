name: Release

on:
  workflow_run:
    workflows: ["Build & Upload Artifact"]
    types:
      - completed

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List all artifacts for this workflow run
        uses: actions/github-script@v7
        with:
          script: |
            const run_id = ${{ github.event.workflow_run.id }};
            const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id,
            });
            console.log("Artifacts found:", artifacts.data.artifacts.map(a => ({
              id: a.id,
              name: a.name,
              size_in_bytes: a.size_in_bytes,
              expired: a.expired,
              archive_download_url: a.archive_download_url
            })));
            const matchArtifact = artifacts.data.artifacts.find(a => a.name === "proton-anarchy");
            if (!matchArtifact) {
              core.setFailed("Artifact not found");
            } else {
              console.log("Matched artifact:", matchArtifact);
              core.setOutput("artifact_id", matchArtifact.id);
            }
        id: find_artifact

      - name: Download artifact file by ID
        uses: actions/download-artifact@v4
        with:
          artifact-ids: ${{ steps.find_artifact.outputs.artifact_id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ github.event.workflow_run.id }}
          path: ./dist

      - name: List contents
        run: ls -lah ./; ls -lah dist;

      - name: Get version from Cargo.toml and append run number
        id: get_version
        run: |
          VERSION=$(grep '^version' Cargo.toml | head -n1 | awk -F\" '{print $2}')
          VERSION_WITH_RUN="${VERSION}-${GITHUB_RUN_NUMBER}"
          echo "version=$VERSION_WITH_RUN" >> $GITHUB_OUTPUT

      - name: List contents
        run: ls -lah ./; ls -lah dist; ls -lah dist/proton-anarchy;

      - name: Create Pre-Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          files: dist/proton-anarchy/proton-anarchy
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
